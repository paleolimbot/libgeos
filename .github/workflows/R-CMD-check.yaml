# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          # Skip R 3.6 for now (fails because the command to generate the
          # shlib is too long)
          #  - {os: windows-latest, r: '3.6'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-2022, r: 'devel-ucrt'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v1

      - name: Show install output
        if: always()
        run: find check -name '00install.out*' -exec cat '{}' \; || true
        shell: bash

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Install package
        run: |
          if (!requireNamespace("fs", quietly = TRUE)) install.packages("fs")
          installed_path <- file.path(.libPaths()[1], "libgeos")
          if (dir.exists(installed_path)) unlink(installed_path, recursive = TRUE)
          fs::dir_copy("check/libgeos.Rcheck/libgeos", installed_path)
        shell: Rscript {0}

      - name: Checkout paleolimbot/geos
        uses: actions/checkout@v2
        with:
          repository: paleolimbot/geos
          ref: master
          path: 'geos'

      - name: Check paleolimbot/geos
        env:
          _R_CHECK_CRAN_INCOMING_: false
          _R_CHECK_FORCE_SUGGESTS_: false
        run: |
          install.packages("wk")
          rcmdcheck::rcmdcheck("geos", args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check_geos")
        shell: Rscript {0}

      - name: Show testthat output (paleolimbot/geos)
        if: always()
        run: find check_geos -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-geos-results
          path: check

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
